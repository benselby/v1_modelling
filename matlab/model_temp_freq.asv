% A receptive field model for temporal frequency in V1 neurons,
% based on figure 8 of Foster et al., 1985.
%
% Ben Selby, 2014

clear all
close all

% Data from figure 8 of Foster et al., 1985 - for reproduction
% Extracted using WebPlotDigitizer
% (arohatgi.info/WebPlotDigitizer/index.html)

data = [0.50219, 8.0021;
0.71667, 9.0784;
0.99014, 8.8791;
1.4360, 10.735;
1.9576, 12.708;
2.7947, 14.884;
4.0683, 25.536;
5.7172, 28.973;
7.9516, 12.654;
11.072, 6.1451;
15.782, 6.2369];

rate = data(:,2); % spikes per second
freq = data(:,1); % cycles per second

T = 1; % duration of stimuli(seconds)
dt = 1/(2*ceil(max(freq))); % time discretization
fsize = 25; % size of the stimuli (pixels to a side)
sfreq = 4; % spatial frequency of stimuli
theta = pi/3; % orientation of stimuli

%% Generate drifting gratings - single (preferred) spatial frequency, 
% varying temporal (drifting) frequencies
grating_bank = zeros(fsize, fsize, round(T/dt), length(freq));

for i=1:length(freq)
   grating_bank(:,:,:,i) = generate_drift_grating(T, dt, sfreq, freq(i), theta, fsize); 
end

%% Play an animation of one of the gratings
gr = grating_bank(:,:,:,10);
for i=1:size(gr,3)
    imshow(gr(:,:,i))
    drawnow
    pause(dt)
end

%%%%%%%%%%%%%%%%%%%%%
gabor_bank = zeros(fsize, fsize, round(T/dt));

for i=1:length(freq)
  gabor_bank = gabor_time(5,5,pi/4, 2, 4, 25, dt, T);
end

%% Play an animation of one of the gratings
for i=1:size(gabor_bank,3)
    imshow(mat2gray(gabor_bank(:,:,i)))
    drawnow
    pause(dt)
end

% Set lower and upper bounds for variables being optimized
lb = [2  2  0    pi/20 0.5  -100  1];
ub = [10 10 pi/2 pi    10    100  10]; 

% numIter = 1;
% xmulti = zeros(numIter,7);
% 
% paramsInitial = [0.5 0.05 0 pi/8 0.15 50 1];
% problem = createOptimProblem('lsqcurvefit','x0',paramsInitial,'objective',@LIF_tfreq_response,...
%             'lb',lb,'ub',ub,'xdata',freq,'ydata',rate);
%         
% ms = MultiStart('PlotFcns',@gsplotbestf);
% ms.UseParallel = 'always';
% 
% [xmulti(1,:),errormulti] = run(ms,problem,100);    
% 
% neural_params = xmulti
% 
% estimate = LIF_tfreq_response(neural_params, freq);
% figure();
% plot(freq, rate, 'ro-', freq, estimate, '*-')
% title('V1 Temporal Frequency Tuning')
% xlabel('Temporal Frequency (cycles/sec)')
% ylabel('Response (Spikes / second)')
% legend('Foster et al. Data', 'Model Approximation')
% 
% figure();
% neuronRF = gabor(neural_params(1), neural_params(2), theta, neural_params(3), neural_params(4), fsize);
% imshow(mat2gray(neuronRF))
% title('Receptive Field of Model Neuron')

figure();
plot(freq, rate)
xlabel('Temporal Frequency (Hz)')
ylabel('Response (spikes/s)')
legend('Foster et al. Data')

